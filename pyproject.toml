[tool.poetry]
name = "fast-zero"
version = "0.1.0"
description = ""
authors = ["Antonio Henrique Machado <antoniohenriquemachado08@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.12.*"
fastapi = {extras = ["standard"], version = "^0.113.0"}
pydantic = {extras = ["email"], version = "^2.9.0"}
sqlalchemy = "^2.0.36"
pydantic-settings = "^2.6.1"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.5"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ignr = "^2.2"

[tool.ruff]
line-length = 119
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

# https://docs.astral.sh/ruff/rules/
# I -> Isort, ordenação de imports
# F -> PyFlakes, procura erros em relação a boas práticas
# E -> pycodestyle, erros de estilo de código
# W -> pycodestyle, avisos sobre estilo de código
# PL -> PyLint, erros em relação a boas práticas de código
# PT -> flake8-pytest, boas práticas do Pytest

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.taskipy.tasks]
run = 'fastapi dev fast_zero/app.py'
run_nw = 'fastapi dev fast_zero/app.py --host 0.0.0.0'

pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'
test_full = 'task format && task test'

lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
